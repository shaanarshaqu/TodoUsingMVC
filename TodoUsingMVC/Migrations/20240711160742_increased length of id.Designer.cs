// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoUsingMVC.Data;

#nullable disable

namespace TodoUsingMVC.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20240711160742_increased length of id")]
    partial class increasedlengthofid
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TodoUsingMVC.Models.Todo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("user_id")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.HasKey("Id");

                    b.HasIndex("user_id");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Title = "watch movie",
                            user_id = "1"
                        },
                        new
                        {
                            Id = "2",
                            Title = "play games",
                            user_id = "1"
                        },
                        new
                        {
                            Id = "3",
                            Title = "eat food",
                            user_id = "1"
                        });
                });

            modelBuilder.Entity("TodoUsingMVC.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(38)
                        .HasColumnType("nvarchar(38)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Email = "jack123@gmail.com",
                            Password = "12345678",
                            UserName = "Jack"
                        });
                });

            modelBuilder.Entity("TodoUsingMVC.Models.Todo", b =>
                {
                    b.HasOne("TodoUsingMVC.Models.User", "user")
                        .WithMany("todos")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("TodoUsingMVC.Models.User", b =>
                {
                    b.Navigation("todos");
                });
#pragma warning restore 612, 618
        }
    }
}
